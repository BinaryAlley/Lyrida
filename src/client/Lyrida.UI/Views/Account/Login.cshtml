@inject ITranslationService translationService

<div class="enlightenment-panel shadow-effect p-2 mx-auto panel w-30 mt-10" style="min-width: 320px;">
    <div class="shine-effect"></div>
    <form id="loginForm" method="post" action="@(!string.IsNullOrEmpty(Configuration["BASE_URL"]) ? Configuration["BASE_URL"] : string.Empty)/Account/Login">
        @Html.AntiForgeryToken()
        <input type="hidden" name="ReturnUrl" value="@ViewData["ReturnUrl"]" />
        <table class="w-100">
            <!-- section email -->
            <tr>
                <td class="w-25">
                    <label for="loginEmail" class="text-light-one">@translationService.Translate(Terms.Username)</label>
                </td>
                <td class="w-75">
                    <input type="email" class="w-100 enlightenment-input" id="loginEmail" name="email" value="@Model?.Email" autocomplete="email">
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <span id="loginEmailError" class="invalid-feedback hidden"></span>
                </td>
            </tr>
            <!-- section password -->
            <tr>
                <td class="w-25">
                    <label for="loginPassword" class="text-light-one">@translationService.Translate(Terms.Password)</label>
                </td>
                <td class="w-75">
                    <input type="password" class="w-100 enlightenment-input" id="loginPassword" name="password" value="@Model?.Password" autocomplete="current-password">
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <span id="loginPasswordError" class="invalid-feedback hidden"></span>
                </td>
            </tr>
            <!-- section generic login errors -->
            <tr>
                <td colspan="2" class="w-100">
                    <span id="loginError" class="invalid-feedback hidden"></span>
                </td>
            </tr>
            <tr>
                <td colspan="2" class="w-100 text-end">
                    <a asp-controller="Account" id="btnChangePwd" asp-action="RecoverPassword" class="abort-button f-14 pt-0 pb-0 pl-5 pr-5 h-22px mt-0 mb-0 mx-auto inline-block">@translationService.Translate(Terms.RecoverPassword)</a>
                    <button type="submit" id="btnLogin" class="confirm-button f-14 h-24px pt-2 pl-5 pr-5 v-align-t">@translationService.Translate(Terms.Login)</button>
                </td>
            </tr>
            <!-- section TOTP -->
            <tr>
                <td class="w-25">
                    <label id="loginTotpLabel" for="loginTotpCode" class="text-light-one hidden">@translationService.Translate(Terms.EnterTotpCode)</label>
                </td>
                <td class="w-75">
                    <input type="number" class="w-100 enlightenment-input hidden" id="loginTotpCode" name="totpCode" value="@Model?.TotpCode">
                </td>
            </tr>
            <tr>
                <td colspan="2" class="w-100">
                    <span id="loginTotpError" class="invalid-feedback hidden"></span>
                </td>
            </tr>
            <tr>
                <td colspan="2" class="w-100 text-end">
                    <button type="submit" id="btnValidateTotp" class="confirm-button hidden f-14 h-24px pt-2 pl-5 pr-5 v-align-t">@translationService.Translate(Terms.ValidateCode)</button>
                </td>
            </tr>
        </table>
    </form>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('#loginForm').on('submit', function (event) {
                event.preventDefault();
                var form = $(this);
                var url = form.attr('action');
                $.ajax({
                    type: "POST",
                    url: url,
                    data: form.serialize(),
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (data) {
                        const btnLogin = $('#btnLogin');
                        const loginError = $('#loginError');
                        const loginEmail = $('#loginEmail');
                        const btnChangePwd = $('#btnChangePwd');
                        const loginPassword = $('#loginPassword');
                        const loginTotpCode = $('#loginTotpCode');
                        const loginTotpLabel = $('#loginTotpLabel');
                        const loginTotpError = $('#loginTotpError');
                        const btnValidateTotp = $('#btnValidateTotp');
                        const loginEmailError = $('#loginEmailError');
                        const loginPasswordError = $('#loginPasswordError');
                        loginError.removeClass('inline').addClass('hidden');
                        loginTotpError.removeClass('inline').addClass('hidden');
                        loginEmailError.removeClass('inline').addClass('hidden');
                        loginPasswordError.removeClass('inline').addClass('hidden');
                        if (data.success) {
                            getUserPermissions();
                            window.location.href = data.redirectUrl;
                        } else {
                            if (data.emailError)
                                loginEmailError.text(data.emailError).removeClass('hidden').addClass('inline');
                            if (data.passwordError)
                                loginPasswordError.text(data.passwordError).removeClass('hidden').addClass('inline');
                            if (data.errorMessage)
                                loginError.text(data.errorMessage).removeClass('hidden').addClass('inline');
                            if (data.totpError) { // this will be populated if the API asked for TOTP too, after password login
                                if (loginTotpCode.hasClass('hidden')) {
                                    btnLogin.prop("disabled", true);
                                    loginEmail.attr("readonly", true);
                                    loginPassword.attr("readonly", true);
                                    btnChangePwd.attr("disabled", "disabled");
                                    loginTotpCode.removeClass('hidden').addClass('inline');
                                    loginTotpLabel.removeClass('hidden').addClass('inline');
                                    btnValidateTotp.removeClass('hidden').addClass('inline');
                                    loginTotpCode.focus();
                                }
                                else // only display totp errors when submitting a form where the TOTP code was already asked
                                    loginTotpError.text(data.totpError).removeClass('hidden').addClass('inline');
                            }
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        Swal.fire({
                            title: '@translationService.Translate(Terms.NotificationError)',
                            icon: 'error',
                            buttonsStyling: false,
                            customClass: {
                                popup: 'colored-toast text-light-one',
                                confirmButton: 'confirm-button f-18 h-24px pl-10 pr-10'
                            },
                            text: errorThrown,
                            confirmButtonText: 'OK'
                        });
                    }
                });
            });
            $('#loginEmail, #loginPassword, #loginTotpCode').on('keydown', function (e) {
                if (e.which === 13) { // Enter key's keycode
                    if ($('#loginTotpCode').is(':visible')) {
                        $('#btnValidateTotp').click(); // trigger the TOTP button click when the login part was already performed
                        e.preventDefault(); // prevent the default action
                    }
                }
            });
        });
    </script>
}