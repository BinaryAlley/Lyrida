@inject ITranslationService translationService
@{
    ViewData["Title"] = @translationService.Translate(Terms.ChangePassword);
    string currentPasswordErrorMessage = string.Empty;
    string newPasswordErrorMessage = string.Empty;
    string newPasswordConfirmErrorMessage = string.Empty;
    string changePasswordErrorMessage = string.Empty;
    string? changePasswordSuccessMessage = TempData["changePasswordSuccess"] as string;
    // handle error messages sent with model validations
    if (!ViewData.ModelState.IsValid)
    {
        if (ViewData.ModelState.ContainsKey("Password"))
            currentPasswordErrorMessage = ViewData.ModelState["Password"]!.Errors[0].ErrorMessage;
        if (ViewData.ModelState.ContainsKey("NewPassword"))
            newPasswordErrorMessage = ViewData.ModelState["NewPassword"]!.Errors[0].ErrorMessage;
        if (ViewData.ModelState.ContainsKey("NewPasswordConfirm"))
            newPasswordConfirmErrorMessage = ViewData.ModelState["NewPasswordConfirm"]!.Errors[0].ErrorMessage;
    }
    if (ViewData.ModelState.ContainsKey("ChangePasswordError"))
        changePasswordErrorMessage = ViewData.ModelState["ChangePasswordError"]!.Errors[0].ErrorMessage;
}

<div class="enlightenment-panel shadow-effect p-2 mx-auto panel w-30" style="min-width: 422px;">
    <div class="shine-effect"></div>
    @if (string.IsNullOrEmpty(changePasswordSuccessMessage))
    {
        <form id="changePasswordForm" method="post" action="@(!string.IsNullOrEmpty(Configuration["BASE_URL"]) ? Configuration["BASE_URL"] : string.Empty)/Account/ChangePassword">
            <table class="w-100">
                <!-- section current password -->
                <tr>
                    <td class="w-50">
                        <label for="currentPassword" class="text-light-one">@translationService.Translate(Terms.CurrentPassword)</label>
                    </td>
                    <td class="w-50">
                        <input type="password" class="w-100 enlightenment-input" id="currentPassword" name="currentPassword" value="@Model.CurrentPassword">
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <span id="currentPasswordError" class="invalid-feedback @(!string.IsNullOrEmpty(currentPasswordErrorMessage) ? "inline" : "hidden")">@currentPasswordErrorMessage</span>
                    </td>
                </tr>
                <!-- section new password -->
                <tr>
                    <td class="w-50">
                        <label for="newPassword" class="text-light-one">@translationService.Translate(Terms.NewPassword)</label>
                    </td>
                    <td class="w-50">
                        <input type="password" class="w-100 enlightenment-input" id="newPassword" name="newPassword" value="@Model.NewPassword">
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <span id="newPasswordError" class="invalid-feedback @(!string.IsNullOrEmpty(newPasswordErrorMessage) ? "inline" : "hidden")">@newPasswordErrorMessage</span>
                    </td>
                </tr>
                <!-- section new password confirmation -->
                <tr>
                    <td class="w-50">
                        <label for="newPasswordConfirm" class="text-light-one">@translationService.Translate(Terms.NewPasswordConfirm)</label>
                    </td>
                    <td class="w-50">
                        <input type="password" class="w-100 enlightenment-input" id="newPasswordConfirm" name="newPasswordConfirm" value="@Model.NewPasswordConfirm">
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <span id="newPasswordConfirmError" class="invalid-feedback @(!string.IsNullOrEmpty(newPasswordConfirmErrorMessage) ? "inline" : "hidden")">@newPasswordConfirmErrorMessage</span>
                    </td>
                </tr>
                <!-- section generic change password errors -->
                <tr>
                    <td colspan="2" class="w-100">
                        <span id="changePasswordError" class="invalid-feedback @(!string.IsNullOrEmpty(changePasswordErrorMessage) ? "inline" : "hidden")">@changePasswordErrorMessage</span>
                    </td>
                </tr>
                <tr>
                    <td colspan="2" class="w-100 text-end">
                        <button type="submit" class="confirm-button f-14 h-24px pt-2 v-align-t">@translationService.Translate(Terms.ChangePassword)</button>
                    </td>
                </tr>
            </table>
        </form>
    }
    <!-- section change password success -->
    <div class="text-center w-100">
        <p id="changePasswordSuccess" class="text-light-one w-100 @(!string.IsNullOrEmpty(changePasswordSuccessMessage) ? "inline" : "hidden")">@translationService.Translate(Terms.PasswordChanged)</p>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('#changePasswordForm').on('submit', function (event) {
                event.preventDefault();
                var form = $(this);
                var url = baseUrl + form.attr('action');
                $.ajax({
                    type: "POST",
                    url: url,
                    data: form.serialize(),
                    success: function (data) {
                        const changePasswordForm = $('#changePasswordForm');
                        const currentPasswordError = $('#currentPasswordError');
                        const newPasswordError = $('#newPasswordError');
                        const newPasswordConfirmError = $('#newPasswordConfirmError');
                        const changePasswordSuccess = $('#changePasswordSuccess');
                        const changePasswordError = $('#changePasswordError');
                        currentPasswordError.removeClass('inline').addClass('hidden');
                        newPasswordError.removeClass('inline').addClass('hidden');
                        newPasswordConfirmError.removeClass('inline').addClass('hidden');
                        changePasswordSuccess.removeClass('inline').addClass('hidden');
                        changePasswordError.removeClass('inline').addClass('hidden');
                        if (data.success) {
                            $('#currentPasswordError').val('');
                            $('#currentPassword').val('');
                            $('#newPassword').val('');
                            $('#newPasswordConfirm').val('');
                            changePasswordForm.removeClass('inline').addClass('hidden');
                            changePasswordError.removeClass('inline').addClass('hidden');
                            changePasswordSuccess.removeClass('hidden').addClass('inline');
                        } else {
                            if (data.currentPasswordError)
                                currentPasswordError.text(data.currentPasswordError).removeClass('hidden').addClass('inline');
                            if (data.newPasswordError)
                                newPasswordError.text(data.newPasswordError).removeClass('hidden').addClass('inline');
                            if (data.newPasswordConfirmError)
                                newPasswordConfirmError.text(data.newPasswordConfirmError).removeClass('hidden').addClass('inline');
                            if (data.errorMessage)
                                changePasswordError.text(data.errorMessage).removeClass('hidden').addClass('inline');
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        swal("STOP!", textStatus + " " + errorThrown, "error", {
                            button: {
                                text: "OK",
                                className: "confirm-button",
                            }
                        });
                    }
                });
            });
        });
    </script>
}