.enlightenment-input {
    font-size: 14px;
    padding: 5px;
    border: 1px solid;
    border-color: var(--border-unlit) var(--border-lit) var(--border-lit) var(--border-unlit);
    border-radius: 3px;
    background: linear-gradient(0deg, #90c247, #509c00);
    transition: background 0.3s, color 0.3s;
    color: #000;
    outline: none;  /* Removes the default focus styles */
    position: relative;
    box-sizing: border-box
}

/* Hovered State */
.enlightenment-input:hover {
    background: var(--window-button-over-color);
}

/* Unfocused State */
.enlightenment-input:not(:focus) {
    background: linear-gradient(0deg, #6b7579, #576b65);
    color: #000;
}

/* Focused State */
.enlightenment-input:focus {
    font-style: italic;
    color: #333;
    background: linear-gradient(0deg, #6AAFF8, #82E9F7);
    box-shadow: inset 4px 6px 8px rgba(0,0,0,0.6);  /* This will provide the inner shadow */
    border-color: var(--border-unlit) var(--border-lit) var(--border-lit) var(--border-unlit); /* Make sure this stays consistent */
    outline: none;
}

/* Placeholder Text State */
.enlightenment-input::placeholder  {
    color: #999;
}

.enlightenment-input:disabled {
    color: #999;
    background: var(--window-back-color);
}

/* Readonly State - Similar to Disabled State in XAML */
.enlightenment-input[readonly] {
    color: #999;
    background: var(--window-back-color);
}

/* Error State */
.enlightenment-input[data-has-error="true"] {
    border-color: #f00;   /* Red border for error state */
    color: #FFF;
    background: #700;
}

textarea {
    resize: none;
}